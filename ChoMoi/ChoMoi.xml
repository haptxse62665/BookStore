<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ChoMoi</name>
    </assembly>
    <members>
        <member name="M:DemoAPI.Controllers.UsersController.Register(System.String,System.String,System.String,System.String)">
            <summary>
            Register
            </summary>
            <param name="email"></param>
            <param name="password"></param>
            <param name="confirmPassword"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:DemoAPI.Controllers.UsersController.Login(System.String,System.String)">
            <summary>
            Login
            </summary>
            <param name="email"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:DemoAPI.Controllers.UsersController.Logout">
            <summary>
            Logout Cookie
            </summary>
            <returns></returns>
        </member>
        <member name="M:DemoAPI.Controllers.UsersController.GetUserbyTokenAsync">
            <summary>
            Check Token
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.AuthorContactsController.GetContactByAuthorID(System.String)">
            <summary>
            Get Contact by Author ID
            </summary>
            <param name="authorID"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BookBuysController.GetBookBuy">
            <summary>
            Get All Book Buy From
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BookBuysController.GetBookBuy(System.Int32)">
            <summary>
            Ger book buy ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BookBuysController.PutBookBuy(ChoMoi.DTOs.BookBuyViewModel)">
            <summary>
            Update Book Buy From
            </summary>
            <param name="bookBuy"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BookBuysController.PostBookBuy(System.String)">
            <summary>
            Create Book Buy From
            </summary>
            <param name="bookBuyFrom"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BookBuysController.DeleteBookBuy(System.Int32)">
            <summary>
            Delete Book buy
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BookCategoriesController.getAllBookByCategory(System.Int32)">
            <summary>
            Get all Book by Category
            </summary>
            <param name="categoryId"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BookCategoriesController.GetBookCategory">
            <summary>
            Test Role
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BookCategoriesController.PutBookCategory(System.Int64,DemoAPI.Models.BookCategory)">
            <summary>
            Update Category
            </summary>
            <param name="id"></param>
            <param name="bookCategory"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BookCategoriesController.PostBookCategory(System.String)">
            <summary>
            Add Book Category
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BooksController.GetAllBookByCondition(ChoMoi.DTOs.RequestPagination)">
            <summary>
            Get All Book by condition
            </summary>
            <param name="requestPagination"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BooksController.GetBook">
            <summary>
            Get all Book
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BooksController.InsertBook(ChoMoi.DTOs.InsertBookViewModel)">
            <summary>
            Add new book
            </summary>
            <param name="insertBookViewModel"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BooksController.GetBook(System.Int32)">
            <summary>
            get book by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BooksController.PutBook(System.Int32,System.String)">
            <summary>
            Update book
            </summary>
            <param name="id"></param>
            <param name="bookTitle"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.BooksController.DeleteBook(System.Int32)">
            <summary>
            Update Deleted
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.PublishersController.GetPublisher">
            <summary>
            Get All Publisher
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.PublishersController.GetPublisher(System.Int32)">
            <summary>
            Get User by ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.PublishersController.PutPublisher(ChoMoi.DTOs.PublisherViewModel)">
            <summary>
            Update Publisher
            </summary>
            <param name="publisherVM"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.PublishersController.PostPublisher(System.String)">
            <summary>
            Add Publisher
            </summary>
            <param name="publisher"></param>
            <returns></returns>
        </member>
        <member name="M:ChoMoi.Controllers.PublishersController.DeletePublisher(System.Int32)">
            <summary>
            Delete Publisher by ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="F:Api.Repositories.UnitOfWork._dbContext">
            <summary>
            The DbContext
            </summary>
        </member>
        <member name="M:Api.Repositories.UnitOfWork.#ctor(DemoAPI.Models.BookStoreContext)">
            <summary>
            Initializes a new instance of the UnitOfWork class.
            </summary>
            <param name="context">The object context</param>
        </member>
        <member name="M:Api.Repositories.UnitOfWork.Dispose">
            <summary>
            Disposes the current object
            </summary>
        </member>
        <member name="M:Api.Repositories.UnitOfWork.Dispose(System.Boolean)">
            <summary>
            Disposes all external resources.
            </summary>
            <param name="disposing">The dispose indicator.</param>
        </member>
        <member name="M:Api.Repositories.IGenericRepository`1.Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Determines whether any element of a sequence satisfies a condition.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>true if any elements in the source sequence pass the test in the specified predicate;otherwise, false.</returns>
            <exception>T:System.ArgumentNullException: source or predicate is null.</exception>
        </member>
    </members>
</doc>
